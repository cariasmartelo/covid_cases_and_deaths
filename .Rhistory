cases_us_csv <- 'time_series_covid19_confirmed_US.csv'
cases_world_csv <- 'time_series_covid19_confirmed_global.csv'
deaths_us_csv <- 'time_series_covid19_deaths_US.csv'
deaths_world_csv <- 'time_series_covid19_deaths_global.csv'
# Downloading most recent CSV's
for (panel in c(cases_us_csv, cases_world_csv, deaths_us_csv, deaths_world_csv)){
url_path <- file.path(repository, panel)
filepath <- "data"
GET(url_path, write_disk(file.path(filepath, panel), overwrite=TRUE))
}
# Loading cases
cases_us <- read_csv(file.path(filepath, cases_us_csv))
cases_world <- read_csv(file.path(filepath, cases_world_csv))
deaths_us <- read_csv(file.path(filepath, deaths_us_csv))
deaths_world <- read_csv(file.path(filepath, deaths_world_csv))
cases_by_state <- cases_us %>%
select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2,
-Country_Region, -Lat, -Long_, -Combined_Key) %>%
group_by(Province_State) %>%
summarise_all(sum)
View(cases_by_state)
#Covid gov Responses
#Script to download latest data from John Hompings and do come plots
#
rm(list = ls())
library(tidyverse)
library(httr)
#setwd("~/Google Drive/Escuela/MSCAPP/Q6/covid_gov_responses/covid_cases_and_deaths")
# URL of updated data
repository <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/'
cases_us_csv <- 'time_series_covid19_confirmed_US.csv'
cases_world_csv <- 'time_series_covid19_confirmed_global.csv'
deaths_us_csv <- 'time_series_covid19_deaths_US.csv'
deaths_world_csv <- 'time_series_covid19_deaths_global.csv'
# Downloading most recent CSV's
for (panel in c(cases_us_csv, cases_world_csv, deaths_us_csv, deaths_world_csv)){
url_path <- file.path(repository, panel)
filepath <- "data"
GET(url_path, write_disk(file.path(filepath, panel), overwrite=TRUE))
}
# Loading cases
cases_us <- read_csv(file.path(filepath, cases_us_csv))
cases_world <- read_csv(file.path(filepath, cases_world_csv))
deaths_us <- read_csv(file.path(filepath, deaths_us_csv))
deaths_world <- read_csv(file.path(filepath, deaths_world_csv))
cases_by_state <- cases_us %>%
select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2,
-Country_Region, -Lat, -Long_, -Combined_Key) %>%
group_by(Province_State) %>%
summarise_all(sum)
View(cases_by_state)
View(cases_us)
View(cases_us)
View(cases_by_state)
cases_by_state %>%
gather("date", "cases", 2:)
cases_by_state %>%
gather("date", "cases", 2:ncol(cases_by_state))
cases_by_state_long <- cases_by_state %>%
gather("date", "cases", 2:ncol(cases_by_state))
View(cases_by_state_long)
as.Date(cases_by_state_long$date)
glimpse(cases_by_state_long)
as.Date(cases_by_state_long$date, format = "%m/%d/%y")
cases_by_state_long <- cases_by_state %>%
gather("date", "cases", 2:ncol(cases_by_state)) %>%
mutate(date = as.Date(date, format = "%m/%d/%y"))
glimpse(cases_by_state_long)
View(cases_by_state_long)
cases_by_state_long %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State, linetype = Province_State))
cases_by_state_long %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State))
cases_by_state[-1]
rowMeans(cases_by_state[,-1], na.rm = TRUE)
cases_by_state <- cases_by_state %>%
mutate(average_cases = rowMeans(cases_by_state[,-1], na.rm = TRUE))
cases_by_state
# Create average vases column
top_states <- cases_by_state %>%
arrange(desc(average_cases))
# Create average vases column
top_states <- cases_by_state %>%
arrange(desc(average_cases)) %>%
head(10) %>%
select(Province_State)
View(top_states)
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State))
top_states
top_states <- cases_by_state %>%
arrange(desc(average_cases)) %>%
head(10) %>%
select(Province_State)
# Convert by state to long
cases_by_state_long <- cases_by_state %>%
gather("date", "cases", 2:ncol(cases_by_state)) %>%
mutate(date = as.Date(date, format = "%m/%d/%y"))
top_states
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State))
# Plot most infected states
cases_by_state_long %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State))
View(cases_by_state_long)
#Covid gov Responses
#Script to download latest data from John Hompings and do come plots
#
rm(list = ls())
library(tidyverse)
library(httr)
#setwd("~/Google Drive/Escuela/MSCAPP/Q6/covid_gov_responses/covid_cases_and_deaths")
# URL of updated data
repository <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/'
cases_us_csv <- 'time_series_covid19_confirmed_US.csv'
cases_world_csv <- 'time_series_covid19_confirmed_global.csv'
deaths_us_csv <- 'time_series_covid19_deaths_US.csv'
deaths_world_csv <- 'time_series_covid19_deaths_global.csv'
# Downloading most recent CSV's
for (panel in c(cases_us_csv, cases_world_csv, deaths_us_csv, deaths_world_csv)){
url_path <- file.path(repository, panel)
filepath <- "data"
GET(url_path, write_disk(file.path(filepath, panel), overwrite=TRUE))
}
# Loading cases
cases_us <- read_csv(file.path(filepath, cases_us_csv))
cases_world <- read_csv(file.path(filepath, cases_world_csv))
deaths_us <- read_csv(file.path(filepath, deaths_us_csv))
deaths_world <- read_csv(file.path(filepath, deaths_world_csv))
# Aggregate by state, creating average cases column
cases_by_state <- cases_us %>%
select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2,
-Country_Region, -Lat, -Long_, -Combined_Key) %>%
group_by(Province_State) %>%
summarise_all(sum) %>%
mutate(average_cases = rowMeans(cases_by_state[,-1], na.rm = TRUE))
# Optain most infected states
top_states <- cases_by_state %>%
arrange(desc(average_cases)) %>%
head(10) %>%
select(Province_State)
# Convert by state to long
cases_by_state_long <- cases_by_state %>%
gather("date", "cases", 2:ncol(cases_by_state)) %>%
mutate(date = as.Date(date, format = "%m/%d/%y"))
top_states
View(cases_by_state_long)
# Plot most infected states
cases_by_state_long %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State))
#Covid gov Responses
#Script to download latest data from John Hompings and do come plots
#
rm(list = ls())
library(tidyverse)
library(httr)
#setwd("~/Google Drive/Escuela/MSCAPP/Q6/covid_gov_responses/covid_cases_and_deaths")
# URL of updated data
repository <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/'
cases_us_csv <- 'time_series_covid19_confirmed_US.csv'
cases_world_csv <- 'time_series_covid19_confirmed_global.csv'
deaths_us_csv <- 'time_series_covid19_deaths_US.csv'
deaths_world_csv <- 'time_series_covid19_deaths_global.csv'
# Downloading most recent CSV's
for (panel in c(cases_us_csv, cases_world_csv, deaths_us_csv, deaths_world_csv)){
url_path <- file.path(repository, panel)
filepath <- "data"
GET(url_path, write_disk(file.path(filepath, panel), overwrite=TRUE))
}
# Loading cases
cases_us <- read_csv(file.path(filepath, cases_us_csv))
cases_world <- read_csv(file.path(filepath, cases_world_csv))
deaths_us <- read_csv(file.path(filepath, deaths_us_csv))
deaths_world <- read_csv(file.path(filepath, deaths_world_csv))
# Aggregate by state, creating average cases column
cases_by_state <- cases_us %>%
select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2,
-Country_Region, -Lat, -Long_, -Combined_Key) %>%
group_by(Province_State) %>%
summarise_all(sum) %>%
mutate(average_cases = rowMeans(cases_by_state[,-1], na.rm = TRUE))
# Optain most infected states
top_states <- cases_by_state %>%
arrange(desc(average_cases)) %>%
head(10) %>%
select(Province_State)
# Convert by state to long
cases_by_state_long <- cases_by_state %>%
gather("date", "cases", 2:ncol(cases_by_state)) %>%
mutate(date = as.Date(date, format = "%m/%d/%y"))
top_states
View(cases_by_state_long)
# Plot most infected states
cases_by_state_long %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State))
cases_by_state_long <- cases_by_state %>%
gather("date", "cases", 2:ncol(cases_by_state) - 1) %>%
mutate(date = as.Date(date, format = "%m/%d/%y"))
top_states
View(cases_by_state_long)
cases_by_state_long <- cases_by_state %>%
gather("date", "cases", 2:ncol(cases_by_state) - 1) %>%
mutate(date = as.Date(date, format = "%m/%d/%y"))
top_states
# Optain most infected states
top_states <- cases_by_state %>%
arrange(desc(average_cases)) %>%
head(10) %>%
select(Province_State)
cases_us <- read_csv(file.path(filepath, cases_us_csv))
cases_world <- read_csv(file.path(filepath, cases_world_csv))
deaths_us <- read_csv(file.path(filepath, deaths_us_csv))
deaths_world <- read_csv(file.path(filepath, deaths_world_csv))
cases_by_state <- cases_us %>%
select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2,
-Country_Region, -Lat, -Long_, -Combined_Key) %>%
group_by(Province_State) %>%
summarise_all(sum) %>%
mutate(average_cases = rowMeans(cases_by_state[,-1], na.rm = TRUE))
# Aggregate by state, creating average cases column
cases_by_state <- cases_us %>%
select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2,
-Country_Region, -Lat, -Long_, -Combined_Key) %>%
group_by(Province_State) %>%
summarise_all(sum) %>%
mutate(average_cases = rowMeans(2:, na.rm = TRUE))
cases_by_state <- cases_us %>%
select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2,
-Country_Region, -Lat, -Long_, -Combined_Key) %>%
group_by(Province_State) %>%
summarise_all(sum) %>%
mutate(average_cases = rowMeans(-1, na.rm = TRUE))
# Aggregate by state, creating average cases column
cases_by_state <- cases_us %>%
select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2,
-Country_Region, -Lat, -Long_, -Combined_Key) %>%
group_by(Province_State) %>%
summarise_all(sum) %>%
mutate(average_cases = rowMeans(.[-1], na.rm = TRUE))
top_states <- cases_by_state %>%
arrange(desc(average_cases)) %>%
head(10) %>%
select(Province_State)
# Convert by state to long
cases_by_state_long <- cases_by_state %>%
gather("date", "cases", 2:ncol(cases_by_state) - 1) %>%
mutate(date = as.Date(date, format = "%m/%d/%y"))
View(cases_by_state_long)
#Covid gov Responses
#Script to download latest data from John Hompings and do come plots
#
rm(list = ls())
library(tidyverse)
library(httr)
#setwd("~/Google Drive/Escuela/MSCAPP/Q6/covid_gov_responses/covid_cases_and_deaths")
# URL of updated data
repository <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/'
cases_us_csv <- 'time_series_covid19_confirmed_US.csv'
cases_world_csv <- 'time_series_covid19_confirmed_global.csv'
deaths_us_csv <- 'time_series_covid19_deaths_US.csv'
deaths_world_csv <- 'time_series_covid19_deaths_global.csv'
# Downloading most recent CSV's
for (panel in c(cases_us_csv, cases_world_csv, deaths_us_csv, deaths_world_csv)){
url_path <- file.path(repository, panel)
filepath <- "data"
GET(url_path, write_disk(file.path(filepath, panel), overwrite=TRUE))
}
# Loading cases
cases_us <- read_csv(file.path(filepath, cases_us_csv))
cases_world <- read_csv(file.path(filepath, cases_world_csv))
deaths_us <- read_csv(file.path(filepath, deaths_us_csv))
deaths_world <- read_csv(file.path(filepath, deaths_world_csv))
# Aggregate by state, creating average cases column
cases_by_state <- cases_us %>%
select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2,
-Country_Region, -Lat, -Long_, -Combined_Key) %>%
group_by(Province_State) %>%
summarise_all(sum)
# Optain most infected states
top_states <- cases_by_state %>%
mutate(average_cases = rowMeans(.[-1], na.rm = TRUE)) %>%
arrange(desc(average_cases)) %>%
head(10) %>%
select(Province_State)
# Convert by state to long
cases_by_state_long <- cases_by_state %>%
gather("date", "cases", 2:ncol(cases_by_state) - 1) %>%
mutate(date = as.Date(date, format = "%m/%d/%y"))
top_states
View(cases_by_state_long)
#Covid gov Responses
#Script to download latest data from John Hompings and do come plots
#
rm(list = ls())
library(tidyverse)
library(httr)
#setwd("~/Google Drive/Escuela/MSCAPP/Q6/covid_gov_responses/covid_cases_and_deaths")
# URL of updated data
repository <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/'
cases_us_csv <- 'time_series_covid19_confirmed_US.csv'
cases_world_csv <- 'time_series_covid19_confirmed_global.csv'
deaths_us_csv <- 'time_series_covid19_deaths_US.csv'
deaths_world_csv <- 'time_series_covid19_deaths_global.csv'
# Downloading most recent CSV's
for (panel in c(cases_us_csv, cases_world_csv, deaths_us_csv, deaths_world_csv)){
url_path <- file.path(repository, panel)
filepath <- "data"
GET(url_path, write_disk(file.path(filepath, panel), overwrite=TRUE))
}
# Loading cases
cases_us <- read_csv(file.path(filepath, cases_us_csv))
cases_world <- read_csv(file.path(filepath, cases_world_csv))
deaths_us <- read_csv(file.path(filepath, deaths_us_csv))
deaths_world <- read_csv(file.path(filepath, deaths_world_csv))
# Aggregate by state, creating average cases column
cases_by_state <- cases_us %>%
select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2,
-Country_Region, -Lat, -Long_, -Combined_Key) %>%
group_by(Province_State) %>%
summarise_all(sum)
# Optain most infected states
top_states <- cases_by_state %>%
mutate(average_cases = rowMeans(.[-1], na.rm = TRUE)) %>%
arrange(desc(average_cases)) %>%
head(10) %>%
select(Province_State)
# Convert by state to long
cases_by_state_long <- cases_by_state %>%
gather("date", "cases", 2:ncol(cases_by_state) - 1) %>%
mutate(date = as.Date(date, format = "%m/%d/%y"))
top_states
View(cases_by_state_long)
View(cases_by_state)
#Covid gov Responses
#Script to download latest data from John Hompings and do come plots
#
rm(list = ls())
library(tidyverse)
library(httr)
#setwd("~/Google Drive/Escuela/MSCAPP/Q6/covid_gov_responses/covid_cases_and_deaths")
# URL of updated data
repository <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/'
cases_us_csv <- 'time_series_covid19_confirmed_US.csv'
cases_world_csv <- 'time_series_covid19_confirmed_global.csv'
deaths_us_csv <- 'time_series_covid19_deaths_US.csv'
deaths_world_csv <- 'time_series_covid19_deaths_global.csv'
# Downloading most recent CSV's
for (panel in c(cases_us_csv, cases_world_csv, deaths_us_csv, deaths_world_csv)){
url_path <- file.path(repository, panel)
filepath <- "data"
GET(url_path, write_disk(file.path(filepath, panel), overwrite=TRUE))
}
# Loading cases
cases_us <- read_csv(file.path(filepath, cases_us_csv))
cases_world <- read_csv(file.path(filepath, cases_world_csv))
deaths_us <- read_csv(file.path(filepath, deaths_us_csv))
deaths_world <- read_csv(file.path(filepath, deaths_world_csv))
# Aggregate by state, creating average cases column
cases_by_state <- cases_us %>%
select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2,
-Country_Region, -Lat, -Long_, -Combined_Key) %>%
group_by(Province_State) %>%
summarise_all(sum)
# Optain most infected states
top_states <- cases_by_state %>%
mutate(average_cases = rowMeans(.[-1], na.rm = TRUE)) %>%
arrange(desc(average_cases)) %>%
head(10) %>%
select(Province_State)
# Convert by state to long
cases_by_state_long <- cases_by_state %>%
gather("date", "cases", 2:ncol(cases_by_state)) %>%
mutate(date = as.Date(date, format = "%m/%d/%y"))
View(cases_by_state_long)
pull(top_states)
cases_by_state_long <- cases_by_state %>%
gather("date", "cases", 2:ncol(cases_by_state)) %>%
mutate(date = as.Date(date, format = "%m/%d/%y")) %>5
pull(.)
ost infected states
top_states <- cases_by_state %>%
mutate(average_cases = rowMeans(.[-1], na.rm = TRUE)) %>%
arrange(desc(average_cases)) %>%
head(10) %>%
select(Province_State) %>%
pull(.)
cases_by_state_long %>%
filter(Province_State %in% top_states) %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State))
# Plot most infected states
cases_by_state_long %>%
filter(Province_State %in% top_states) %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State)) +
theme_bw()
# Plot most infected states
cases_by_state_long %>%
filter(Province_State %in% top_states) %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State)) +
theme_bw() +
ggtitle("S")
# Plot most infected states
cases_by_state_long %>%
filter(Province_State %in% top_states) %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State)) +
theme_bw() +
ggtitle("Confirmed cases by US state \n (10 States with highest number)")
# Plot most infected states
cases_by_state_long %>%
filter(Province_State %in% top_states) %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State)) +
theme_bw() +
ggtitle("Confirmed cases by US state - 10 States with highest number")
library(scales)
# Plot most infected states
cases_by_state_long %>%
filter(Province_State %in% top_states) %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State)) +
theme_bw() +
ggtitle("Confirmed cases by US state - 10 States with highest number") +
scale_y_continuous(labels = coma)
# Plot most infected states
cases_by_state_long %>%
filter(Province_State %in% top_states) %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State)) +
theme_bw() +
ggtitle("Confirmed cases by US state - 10 States with highest number") +
scale_y_continuous(labels = comma)
# Plot most infected states
cases_by_state_long %>%
filter(Province_State %in% top_states) %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State)) +
theme_bw() +
ggtitle("Cummulative confirmed cases by US state by day - 10 States with highest number") +
scale_y_continuous(labels = comma)
cases_by_state_long %>%
filter(Province_State %in% top_states) %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State)) +
theme_bw() +
ggtitle("Cummulative confirmed cases by US state by day - 10 States with highest number") +
scale_y_continuous(labels = comma) %>%
ggsave(file.path('figures', 'cummulative_confirmed_us_states.png'))
# Plot most infected states
cases_by_state_long %>%
filter(Province_State %in% top_states) %>%
ggplot(aes(x = date, y = cases)) +
geom_line(aes(color = Province_State)) +
theme_bw() +
ggtitle("Cummulative confirmed cases by US state by day - 10 States with highest number") +
scale_y_continuous(labels = comma) +
ggsave(file.path('figures', 'cummulative_confirmed_us_states.png'))
rm(list = ls())
library(tidyverse)
library(httr)
rm(list = ls())
library(tidyverse)
library(httr)
temp <- tempfile()
download.file(latest_ihme_updatea,temp)
# URL of updated data
latest_ihme_updated <- 'https://ihmecovid19storage.blob.core.windows.net/latest/ihme-covid19.zip'
filepath <- "data"
filepath <- "data"
GET(latest_ihme_updated, write_disk(file.path(filepath, 'IHME.zip'), overwrite=TRUE))
unzip(file.path(filepath, 'IHME.zip'))
download.file(latest_ihme_updated, destfile = (file.path(filepath, 'IHME.zip')))
#Covid gov Responses
#Script to download latest data from John Hompings and do come plots
#
rm(list = ls())
library(tidyverse)
library(httr)
#setwd("~/Google Drive/Escuela/MSCAPP/Q6/covid_gov_responses/covid_cases_and_deaths")
# URL of updated data
repository <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/'
cases_us_csv <- 'time_series_covid19_confirmed_US.csv'
cases_world_csv <- 'time_series_covid19_confirmed_global.csv'
deaths_us_csv <- 'time_series_covid19_deaths_US.csv'
deaths_world_csv <- 'time_series_covid19_deaths_global.csv'
# Downloading most recent CSV's
for (panel in c(cases_us_csv, cases_world_csv, deaths_us_csv, deaths_world_csv)){
url_path <- file.path(repository, panel)
filepath <- "data"
download.file(url_path, destfile = file.path(filepath, panel))
}
temp <- tempfile()
download.file(latest_ihme_updatea,temp)
# URL of updated data
latest_ihme_updated <- 'https://ihmecovid19storage.blob.core.windows.net/latest/ihme-covid19.zip'
download.file(latest_ihme_updated,temp)
data <- read.table(unz(temp, "2020_04_12.02/Hospitalization_all_locs.csv"))
data <- read_csv(unz(temp, "2020_04_12.02/Hospitalization_all_locs.csv"))
unlink(temp)
data
View(data)
temp <- tempfile()
download.file(latest_ihme_updated,temp)
unzip(temp, list=TRUE)
unzip(temp, list=TRUE)$Name[2]
